{
  "name": "ssi",
  "fileTypes": [
    "ssi"
  ],
  "patterns": [
    {
      "include": "#keyword"
    },
    {
      "include": "#function"
    },
    {
      "include": "#variable"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#constant"
    },
    {
      "include": "#number"
    },
    {
      "include": "#comment"
    }
  ],
  "repository": {
    "expressions": {
      "patterns": [
        {
          "include": "#comment"
        }
      ]
    },
    "keyword": {
      "patterns": [
        {
          "match": "\\b(?:if|then|else|or\\sif)\\b",
          "name": "keyword.control.ssi"
        },
        {
          "match": "\\b(?:pass|fail)\\b",
          "name": "keyword.control.ssi"
        },
        {
          "match": "(\\*|\\.|\\\\|\\'|\\$|(\")|\\#|\\^|\\@|\\%|\\=)",
          "name": "keyword.control.ssi"
        },
        {
          "match": "({|})",
          "name": "keyword.control.ssi"
        },
        {
          "match": "\\b(?:((x)?(d|c)|cd)(n|r))\\b",
          "name": "keyword.language.ssi"
        },
        {
          "match": "\\b(?:(c(n|r)f))\\b",
          "name": "keyword.language.ssi"
        },
        {
          "match": "\\b(?:(f(n|r)))\\b",
          "name": "keyword.language.ssi"
        },
        {
          "match": "\\b(?:((x)?(k(n|r))))\\b",
          "name": "keyword.language.ssi"
        },
        {
          "match": "\\b(?:stopped)\\b",
          "name": "keyword.language.ssi"
        }
      ]
    },
    "function": {
      "patterns": [
        {
          "match": "\\b(set|clear|seq)\\b",
          "name": "entity.name.function.ssi"
        },
        {
          "match": "(?<=\\s)(alt>)",
          "name": "entity.name.function.ssi"
        },
        {
          "match": "(?<=\\*)(?:\\S+)\\b",
          "name": "entity.name.function.ssi"
        },
        {
          "match": "(?<=\\^)(?:(T|S)\\S+)\\b",
          "name": "entity.name.function.ssi"
        },
        {
          "match": "(?<=\\*)(?:((I|O)[0-9][0-9]))\\b",
          "name": "entity.name.function.ssi"
        },
        {
          "match": "(?<=\\')(?:(S|P)\\S+)\\b",
          "name": "entity.name.function.ssi"
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "match": "\\b(?:bpull|ascon|tisp[0-2]|stick(\\+nrr)?|lp|foal|rip|del|auto)\\b",
          "name": "variable.other.signal.ssi"
        },
        {
        "match": "\\bG([0-9]([0-9])?)?\\b",
        "name": "variable.other.telegram.ssi"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.logic.ssi",
          "match": "\\b(or)(?!\\sif)\\b"
        },
        {
          "name": "keyword.operator.logic.ssi",
          "match": "\\s((<)|(>))\\s"
        }
      ]
    },
    "constant": {
      "patterns": [
        {
          "match": "\\b(a|l|f|s|xs|(o|c)((>)|(<))?)\\b",
          "name": "constant.language.state.ssi"
        },
        {
          "match": "(?<=\\s)((<)|(>))?(r|s|(f)?(y)?y|g)(\\+)?",
          "name": "constant.language.aspect.ssi"
        }
      ]
    },
    "number": {
      "patterns": [
        {
          "name": "constant.numeric.ssi",
          "match": "\\s[0-9]+\\s"
        },
        {
          "name": "constant.numeric.ssi",
          "match": "(?<=\\s(o|c)((>)|(<)))([0-9]+)(?=\\s)"
        }
      ]
    },
    "comment": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.ssi"
            }
          },
          "match": "^(/).*$\\n?",
          "name": "comment.line.slash.ssi"
        },
        {
          "match": "\\s(/).*$\\n?",
          "name": "comment.part.line.slash.ssi"
        }
      ]
    }
  },
  "scopeName": "source.ssi"
}
