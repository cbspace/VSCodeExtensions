{
  "name": "microlokii",
  "fileTypes": [
    "microlokii"
  ],
  "patterns": [
    {
      "include": "#keyword"
    },
    {
      "include": "#function"
    },
    {
      "include": "#variable"
    },
    {
      "include": "#types"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#constant"
    },
    {
      "include": "#number"
    },
    {
      "include": "#string"
    },
    {
      "include": "#comment"
    }
  ],
  "repository": {
    "expressions": {
      "patterns": [
        {
          "include": "#comment"
        }
      ]
    },
    "keyword": {
      "patterns": [
        {
          "match": "\\b(?:MICROLOK|GENISYS)_II\\sPROGRAM\\b",
          "name": "keyword.language.microlokii"
        },
        {
          "match": "\\b(?:INTERFACE|LOCAL|COMM|(NV\\.)?BOOLEAN\\sBITS|TIMER\\sBITS|LOG\\s+BITS|CONSTANTS|CONFIGURATION|LOGIC\\sBEGIN|END\\sLOGIC|NUMERIC\\sBEGIN|END\\sNUMERIC|END\\sPROGRAM|FIXED|LOCAL_IO)\\s*\\n",
          "name": "keyword.language.microlokii"
        },
        {
          "match": "\\b(?:BOOLEAN|(USER\\s)?NUMERIC|SYSTEM)\\s*\\n",
          "name": "keyword.language.microlokii"
        }
      ]
    },
    "function": {
      "patterns": [
        {
          "match": "\\b(BOARD|TYPE)(?=\\:)",
          "name": "entity.name.function.microlokii"
        },
        {
          "match": "\\b(ADJUSTABLE|FIXED)\\sENABLE(?=\\:)",
          "name": "entity.name.function.microlokii"
        },
        {
          "match": "\\b((NV\\.)?(INPUT|OUTPUT))(?=\\:)",
          "name": "entity.name.function.microlokii"
        },
        {
          "match": "\\b((MII\\.)?ADDRESS)(?=\\:)",
          "name": "entity.name.function.microlokii"
        },
        {
          "match": "\\b(LINK|PROTOCOL)(?=\\:)",
          "name": "entity.name.function.microlokii"
        },
        {
          "match": "\\b(ADJUSTABLE|FIXED)\\s(PORT|BAUD|STOPBITS|PARITY|KEY\\.(ON|OFF)\\.DELAY|STALE\\.DATA\\.TIMEOUT|POINT\\.POINT|POLLING\\.INTERVAL|MASTER\\.TIMEOUT|CARRIER\\.MODE|CRC\\.SIZE|TRANSMITTER\\.INHIBIT|SECURE\\.MODE|MASTER\\.CHECKBACK|PEER\\.ADDRESS)(?=\\:)",
          "name": "entity.name.function.microlokii"
        },
        {
          "match": "\\b(ADJUSTABLE|FIXED)\\s(GRANT\\.DELAY|TIME\\.STAMP|CLOCK\\.MASTER|ACK\\.TIMEOUT|HEARTBEAT\\.INTERVAL|INDICATION\\.UPDATE\\.CYCLE)(?=\\:)",
          "name": "entity.name.function.microlokii"
        },
        {
          "match": "\\b(FRAME\\.LENGTH|STATION\\.NAME)(?=\\:)",
          "name": "entity.name.function.microlokii"
        },
        {
          "match": "\\b(END\\sBLOCK|TRIGGERS\\sON|STALE\\sAFTER)\\b",
          "name": "entity.name.function.microlokii"
        },
        {
          "match": "\\bBLOCK\\s",
          "name": "entity.name.function.microlokii"
        }
      ]
    },
    "variable": {
      "patterns": [
        {
        "match": "\\b(?<!\\.)(?:ASSIGN|NV.ASSIGN|TO)\\b(?<!\\.)",
        "name": "variable.language.assign.microlokii"
        },
        {
        "match": "\\b(?<!\\.)(?:SET|CLEAR)\\b(?<!\\.)",
        "name": "variable.language.setclear.microlokii"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.time.microlokii",
          "match": "(\\:SEC|\\:MSEC)"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.logic.microlokii",
          "match": "(\\+|\\*|\\sOR\\s|\\sAND\\s)"
        },
        {
          "name": "keyword.operator.unary.microlokii",
          "match": "~\\b"
        },
        {
          "name": "keyword.operator.comparison.microlokii",
          "match": "<>"
        },
        {
          "name": "keyword.operator.assignment.microlokii",
          "match": "\\="
        },
        {
          "name": "punctuation.semicolon.microlokii",
          "match": ";"
        }
      ]
    },
    "constant": {
      "patterns": [
        {
          "match": "\\b(?:true|false|TRUE|FALSE)\\b",
          "name": "constant.language.boolean.microlokii"
        },
        {
          "match": "\\b(?:OUT16|IN16)\\b",
          "name": "constant.language.keywordinout.microlokii"
        },
        {
          "match": "\\b((?:OUT|IN)(_SLOT)?)[1-9]([0-9])?\\b",
          "name": "constant.language.keywordslot.microlokii"
        },
        {
          "match": "\\b((?:MICROLOK|GENISYS|S2)\\.(?:MASTER|SLAVE))\\b",
          "name": "constant.language.keywordprotocol.microlokii"
        },
        {
          "match": "\\b(?:NONE|CONSTANT|ON|OFF|MII\\.PEER)\\b",
          "name": "constant.language.keywordlink.microlokii"
        },
        {
          "match": "\\b(?:KILL|CHECKADDRESS|CONFIGURE\\.ERROR)\\b",
          "name": "constant.language.keywordinternal.microlokii"
        },
        {
          "match": "\\b(CPS)\\.(STATUS|ENABLE|OK)\\b",
          "name": "constant.language.keywordcps.microlokii"
        },
        {
          "match": "\\bLED\\.[1-8]\\b",
          "name": "constant.language.keywords.led.microlokii"
        },
        {
          "match": "\\b(INSTALLATION_ADDRESS|(APPLICATION_DATA|EXECUTIVE_SOFTWARE)_VERSION)\\b",
          "name": "constant.language.keywords.led.microlokii"
        },
        {
          "match": "\\b(FIXED|VARIABLE)\\s((DEBUG_PORT_(ADDRESS|BAUDRATE))|LOGIC_TIMEOUT)\\b",
          "name": "constant.language.keywords.led.microlokii"
        },
        {
          "match": "\\bCONFIGURATIONELEMENT_(ADDRESS|(APPLICATION_DATA|EXECUTIVE_SOFTWARE)_VERSION)\\b",
          "name": "constant.language.keywords.led.microlokii"
        }
      ]
    },
    "number": {
      "name": "constant.numeric.microlokii",
      "match": "\\b(?<!\\.)[0-9]+\\b(?!\\.)"
    },
    "string": {
      "name": "string.quoted.double.microlokii",
      "begin": "(\")",
      "end": "(\")"
    },
    "comment": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.microlokii"
            }
          },
          "match": "(//).*$\\n?",
          "name": "comment.line.double-slash.microlokii"
        },
        {
          "begin": "(/)(\\*)",
          "end": "(\\*)(/)",
          "name": "comment.block.slash-star.microlokii"
        },
        {
          "begin": "%",
          "end": "\\\\",
          "name": "comment.block.precent-backslash.microlokii"
        }
      ]
    }
  },
  "scopeName": "source.microlokii"
}
